//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Inputs/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""VIVETracker"",
            ""id"": ""389a8ebb-0607-46b4-bf17-33b7e2f75a00"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""d0c5431e-0828-4cee-bfb8-8cc44c93265e"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""78ce47e5-7a3d-4b9a-939a-0b8912666c79"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""900a3fcb-8094-4ae9-8664-6bcba188d9af"",
                    ""path"": ""<XRViveTracker>{Camera}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6360b007-9bb0-496e-a239-1cc10b8f026b"",
                    ""path"": ""<XRViveTracker>{Camera}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""VRController_left"",
            ""id"": ""a4a085cf-67d8-4a91-9b97-eb4375485f4c"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""43a9904b-5608-43d6-a6f5-15f0811faaab"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""b617b482-6a64-4a90-9a5d-99b4fe7fbf04"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TrackingState"",
                    ""type"": ""Value"",
                    ""id"": ""108d26ef-364c-4d25-8a0c-fef7827eef02"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HapticDevice"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9b702e72-5863-4ac2-95b9-63cbf65f4488"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""f73f6e42-8d60-4a40-9c91-c41f457610da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectValue"",
                    ""type"": ""Value"",
                    ""id"": ""f93ac6a7-9509-40c7-aba1-fdd9a54e828b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""47372cef-6e93-4d4e-b864-86c2811b0dac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActivateValue"",
                    ""type"": ""Value"",
                    ""id"": ""a5b406a3-e88b-4c17-8677-73fe07b951e6"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UIPress"",
                    ""type"": ""Button"",
                    ""id"": ""aaac03d7-ff2e-4d15-968a-705ece3a7813"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UIPressValue"",
                    ""type"": ""Value"",
                    ""id"": ""32d69ff6-d2c8-4add-8f41-2db88e6ceebc"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateAnchor"",
                    ""type"": ""Value"",
                    ""id"": ""147fec15-f4d7-48bb-95fa-75b066a42a24"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TranslateAnchor"",
                    ""type"": ""Value"",
                    ""id"": ""8df53393-dab6-4cf8-bd1b-dcd91d860de7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TeleportSelect"",
                    ""type"": ""Value"",
                    ""id"": ""06559bae-c12e-449a-aaa0-4696d6c0aef0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TeleportModeActivate"",
                    ""type"": ""Value"",
                    ""id"": ""236131de-c617-4b27-95c7-2efb89f089c5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TeleportModeCancel"",
                    ""type"": ""Button"",
                    ""id"": ""5f191d22-9a9a-45ee-8600-5b110a23fb88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Value"",
                    ""id"": ""0de8e5df-ef73-47d1-bb6f-a8563a5a0994"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""784ed83c-d287-446f-8715-6952dc42a9bd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""9c194a9d-96b4-4be1-9feb-0f4cbde0ec1c"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""534a6c4f-c29e-4835-86af-ab68bf7903cf"",
                    ""path"": ""<XRController>{LeftHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""f9e2e416-cbce-41fc-b02d-5dc579fc24cf"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""957e1443-26ca-45bb-b3df-5dc7d8ef00ce"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""15fd5340-fa7b-4553-90a6-e9e15e5b6695"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""74c2ca1a-8c95-4ccb-8e64-8c4d3b98668e"",
                    ""path"": ""<XRController>{LeftHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""64443463-a626-4553-a9e5-178001f4a0be"",
                    ""path"": ""<XRController>{LeftHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""6da19de2-a7d6-4bdd-919b-a30a9f17daea"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6649d4ed-f0d2-4550-b741-fc232985b3ed"",
                    ""path"": ""<XRController>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackingState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b444646d-c6e4-4355-a4f9-167f54b75e09"",
                    ""path"": ""<XRController>{LeftHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HapticDevice"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c391f125-c758-49b0-82ea-754e4158818f"",
                    ""path"": ""<XRController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1cc79e8-334e-485f-876e-71a6b0ca5b53"",
                    ""path"": ""<XRController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4565c5c-89bc-4df5-b5ed-95635c0e9a81"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f560fef3-23cf-4bdc-b288-4fce2c6f7659"",
                    ""path"": ""<XRController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActivateValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5fa773c-1b6b-423e-9848-fa674844f625"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""312eb4ce-3138-44be-9286-62d4d22ba073"",
                    ""path"": ""<XRController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIPressValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""385e7029-ffa5-409b-910c-9de6df8b3cf0"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""RotateAnchor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2feb7d59-15b8-466c-80e3-1e69df5a1662"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""63cc39db-fa17-41a1-a25e-d83ed688c2a6"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5cbb6828-5b54-430e-8749-cc30b5ebc13c"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis/x"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-1),Invert"",
                    ""groups"": """",
                    ""action"": ""RotateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e8c9ffb2-3e48-429f-92bc-4c998918c868"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis/x"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(max=1)"",
                    ""groups"": """",
                    ""action"": ""RotateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e4f4048a-f8e1-43a1-b93d-bdcad1625504"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""TranslateAnchor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""01d3ebe9-bda7-4274-960c-66fc6e01d08f"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis/y"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(max=1)"",
                    ""groups"": """",
                    ""action"": ""TranslateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ef7cd32c-59ba-4ec9-a66e-cfecc0f3c528"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis/y"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-1),Invert"",
                    ""groups"": """",
                    ""action"": ""TranslateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a3f7f22b-a732-4769-9f14-a61f54c30de9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TranslateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2bde8a03-246d-47ac-9673-d5deb1987815"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TranslateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""78c297df-3e3a-406d-9257-0fa3b561d8fc"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=-1,sweepBehavior=3)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c45c7f5-d8a1-4054-8eee-99991d786d1b"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportModeActivate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5cff4ff-82e9-4aba-aae2-0edc49012e39"",
                    ""path"": ""<XRController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportModeCancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""393a454b-9512-4211-bda8-f36026cdd24e"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=12,sweepBehavior=1),Sector(directions=2,sweepBehavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7c13020-a66d-456e-a941-b03bb2b7242d"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""VRController_right"",
            ""id"": ""3fc76634-cee1-45d6-a08d-c784e893bbc7"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""82e47b4f-b3a8-449e-b311-51864f1b0e58"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""078b03d9-00e6-45e7-92eb-d04c3e2b4c11"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TrackingState"",
                    ""type"": ""Value"",
                    ""id"": ""79c1d154-c043-4b9f-967f-3b8cfc8a0a55"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HapticDevice"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a42bb3b0-f499-4f72-9b5c-870f223f24e4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""f8b44424-daaa-4cb9-83a3-95b84c6c9688"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectValue"",
                    ""type"": ""Value"",
                    ""id"": ""298b76ea-0a2b-44d6-9f88-b391eb957c94"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""c26b8962-8d12-4b96-9477-1924baf1d450"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActivateValue"",
                    ""type"": ""Value"",
                    ""id"": ""e8869b75-b66b-431e-ab7b-b5c99d2dc5d2"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UIPress"",
                    ""type"": ""Button"",
                    ""id"": ""0b525f9f-def7-42c6-970d-9ce0f7836bcd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UIPressValue"",
                    ""type"": ""Value"",
                    ""id"": ""211941c7-12c1-4f00-a47b-5e73884c405d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateAnchor"",
                    ""type"": ""Value"",
                    ""id"": ""42112660-e833-429f-a541-48cbc4818d57"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TranslateAnchor"",
                    ""type"": ""Value"",
                    ""id"": ""956f0954-deae-4de6-a982-d3b390d8e4f8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TeleportSelect"",
                    ""type"": ""Value"",
                    ""id"": ""0597f0f6-7df7-4a87-8223-74c33eccfb92"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TeleportModeActivate"",
                    ""type"": ""Value"",
                    ""id"": ""fbd02b0d-0b7a-4ffb-8410-11b7918da9b3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TeleportModeCancel"",
                    ""type"": ""Button"",
                    ""id"": ""fdfc60c6-9b3b-4224-b39c-10ccbbe12017"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Value"",
                    ""id"": ""51611df4-87ea-4abf-857c-ba26b08f5966"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""7a0c376d-afeb-465a-a571-34aa1d6acbbd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3a6771e3-2a52-4eea-886c-18319fff44dd"",
                    ""path"": ""<XRController>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackingState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""ebd698e9-6542-4083-90f1-544b139383df"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""97566636-21d1-495f-8952-68e7d0201e7c"",
                    ""path"": ""<XRController>{RightHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""ccd1a674-eee7-4d11-89ec-07546346c75f"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""f3f73316-a512-4108-b341-2ecdf06deb41"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""4b766cae-21c0-49ad-b1c7-5b257fd1f202"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""df3bb7c9-eade-4bad-89a2-f104c7c3eb56"",
                    ""path"": ""<XRController>{RightHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""58bc6441-e874-4c4c-bbd4-850594209219"",
                    ""path"": ""<XRController>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""d4df73ad-27fd-4719-9c03-edacabefc893"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""73335129-f70d-4c1b-a4d4-cc92e3a4d439"",
                    ""path"": ""<XRController>{RightHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HapticDevice"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d56392c-6b75-44f3-9c03-52d2e2a8d076"",
                    ""path"": ""<XRController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3433c21-f1fb-4494-ad8c-9df383d7ab7f"",
                    ""path"": ""<XRController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c9c9790-5dc6-4331-b62a-05c2ea062b54"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3cae27c-a5eb-41e9-b59b-6997da5b1b0b"",
                    ""path"": ""<XRController>{RightHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActivateValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b650f845-e1c8-43a3-af14-f2ea6cf6115a"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9705013c-5bda-466a-8204-4f8ba1bcef1c"",
                    ""path"": ""<XRController>{RightHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIPressValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5164239d-2738-4fe5-8c03-264b51fdf5c8"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""RotateAnchor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9dce606b-efca-446a-ac8f-f8c0ecd528dc"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""26803058-843f-4aef-a707-0c78dd6b2d94"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""452443cd-d1a8-40a5-811c-ed49aeae0d88"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis/x"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-1),Invert"",
                    ""groups"": """",
                    ""action"": ""RotateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c18ae17e-f691-4d2c-aa3a-dd3b1f495e8e"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis/x"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(max=1)"",
                    ""groups"": """",
                    ""action"": ""RotateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""ab3cc276-aee4-4eb3-b721-51d0d20391dd"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""TranslateAnchor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""67094760-5740-4e08-9124-b876360d8add"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis/y"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(max=1)"",
                    ""groups"": """",
                    ""action"": ""TranslateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c795fa22-d9e3-4a25-bfb2-d8769617f660"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis/y"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-1),Invert"",
                    ""groups"": """",
                    ""action"": ""TranslateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7babd04f-78c4-44ff-898c-f48719b8b77c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TranslateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c04ef9e5-5255-4f4c-8b64-b928cae17f16"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TranslateAnchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0954e7b6-e7e3-49c8-8b7c-9438ba5842e2"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=-1,sweepBehavior=3)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59a629b9-147d-440c-a60e-cdbd12fc128a"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportModeActivate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf3581be-894b-42b7-af53-d875adbfe10f"",
                    ""path"": ""<XRController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportModeCancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e135753-918f-40d0-b419-7c60a9e0de99"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=12,sweepBehavior=1),Sector(directions=2,sweepBehavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92381269-54bc-42c9-a090-9f5a9f011cea"",
                    ""path"": ""<XRController>{RightHand}/primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""id"": ""ed7d7f3e-0dc0-4b2f-9d81-99e022cdec1d"",
            ""actions"": [
                {
                    ""name"": ""BuildingWasPlacedTESTFUNKTION"",
                    ""type"": ""Button"",
                    ""id"": ""3f4a5025-b518-4d5b-bdb7-17cb53ff5c7b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnterPressed"",
                    ""type"": ""Button"",
                    ""id"": ""69bb3cab-6097-4852-893c-006fe3bb521c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CreateRoom"",
                    ""type"": ""Button"",
                    ""id"": ""895d40e1-5988-4cfc-ab45-2349ad1b6a34"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ConnectToServer"",
                    ""type"": ""Button"",
                    ""id"": ""abf8dc80-173b-46b1-afd2-3e49b497c8a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangePlayerSetup_entrance"",
                    ""type"": ""Button"",
                    ""id"": ""407d3b1f-2df9-4d67-9c39-31f67c2e57bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JoinRoom"",
                    ""type"": ""Button"",
                    ""id"": ""486f11c0-20d2-4f7b-a285-e0db2f580d08"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""rightRoom"",
                    ""type"": ""Button"",
                    ""id"": ""12061844-4f38-4739-b5bb-296cd0d0e19e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""leftRoom"",
                    ""type"": ""Button"",
                    ""id"": ""06d287a7-a781-467b-8cc4-fcc0143dd015"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeaveRoom"",
                    ""type"": ""Button"",
                    ""id"": ""80605a2b-8721-4aaf-8b7b-ffbd0dd41abd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ChangePlayerSetup_room"",
                    ""type"": ""Button"",
                    ""id"": ""98c8bb37-58ac-4242-afeb-b9f571ae5dca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchModes"",
                    ""type"": ""Button"",
                    ""id"": ""bb190697-326f-44e8-b22f-f5de6d895830"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6eac8cad-fcdb-4fce-a196-27bd76f4cfc7"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BuildingWasPlacedTESTFUNKTION"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""598feeaf-a4fd-4c6b-8aef-92d82810d89c"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnterPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""262a9851-4938-460f-8909-8b7d81ce64f0"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CreateRoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9dcd4308-60c3-4d09-a3fc-13aeb2555725"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ConnectToServer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd427c5f-caa6-4c38-a0cd-b81be38c482a"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangePlayerSetup_entrance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e4519cd-6a5c-4b15-9fa7-70235149be6d"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JoinRoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""811e748a-7747-4260-ba2e-2e9c3f64abdb"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""rightRoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2fc9ac4-4e0c-44d8-9c20-54e45f5d4716"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""leftRoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0fc8e3bd-c91a-40bb-a8f3-d698fe8f707b"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeaveRoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd016df6-eabb-48c4-9b89-26e706d14ac9"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangePlayerSetup_room"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1434c67-50e5-42a9-ad89-b78d69cd286a"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchModes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Mouse"",
            ""id"": ""e3425870-001a-4e68-86f2-3c41bf6ebd77"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""94bd6ec0-52a0-43a0-a5cc-f1a14cabd3d1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""396e9bbf-933d-4a0d-8e6a-4e34882151eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""360392ef-ac97-4aee-b9dc-c03ca58380a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1fd61c3d-c864-47dc-b3f5-5ff33dc76940"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""94c81cbb-dc7e-41ef-b5cc-6bf9342fa776"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5e317fe1-3d7f-48b3-a0e9-cf9163950007"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2dd67cfc-f87d-40ea-a911-8e13b0d0fa58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""91efc229-a1e1-41fb-9b47-bd087c56a7f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""70b8b8d4-c7ca-4339-b5fd-df28ee833318"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""59a80b60-3614-41c7-b0f6-0b99c13015e7"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""fc76a6d5-4a67-456d-93e6-0fda2c160e50"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""22356938-7aae-49ee-9be3-a143c9b5f748"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""60360c88-8dcb-4cc3-be3d-c8d53578fef3"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""79050d9b-244b-4c1d-91b6-e3f8fae2eb2b"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2194bb58-f296-425e-be43-72bfd431ce14"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4bf78a7d-a9c5-40e2-8bcf-f57cbb5c389a"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8885af99-9dae-403f-9543-74af3810532a"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""85ea6979-3960-43cf-ade5-cfc7267436aa"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""777b867c-5475-40b4-b557-be5315c0f359"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9181e9b3-fd97-4366-a638-c1e4aaed4b31"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""fd651c1f-0d67-477e-ad8e-694b2735638c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9ad1eb76-ba09-4ded-9916-e0c94fd4f3b2"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""95468cc1-6494-4183-8154-97a63e1c0cf3"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""eaf42421-b5e3-46ed-b27d-7b9290e25ae5"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""71fa0c97-cbf6-4a13-8b7d-25d74760b202"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""2f255720-e2e6-47db-be76-571bd041dde2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0bc8704a-aa9c-4c4f-afef-62a812c590bb"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8bb9a4ca-976e-4c10-b651-c79e077f93a1"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e6250a2e-cceb-484f-b25c-7b0b70935139"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""12df9295-cb80-4d8b-8571-8e66ab0102a9"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""957200cf-4a03-4afb-95c3-28f1c2e292fc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0fc6c657-3dfa-4c93-ad52-4304afd2b4bc"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ec73ce55-f8ed-4153-b3d7-9b3a64f1e640"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6d51a81d-01a6-4b64-b85d-962995175c05"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4ddd19e5-0cb4-4596-a72c-01b71fdf30d0"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ede33c9-88b4-4851-8eb9-0ec7140cf4d2"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c48c2b0-fb2f-405e-804a-e6fe4a8ac745"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b646a83-a7f1-4744-8a93-b5ad30a8e48b"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f4ffd52-3c91-4db2-aeda-8b689fff66d6"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d047e7fe-e49c-4e92-b90b-bad581cc92ba"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""798c0960-58ea-481c-a6b2-7f63d5c6db68"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1e849e0-1977-421e-9d79-3f5b9078ac39"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d685320-ef26-4523-9f90-6547d134e900"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56472e3e-4c6a-4b36-ba05-028e5985ee93"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84ad4161-1af9-4269-bbea-64111811a013"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48507409-e1c5-4a36-8146-10755736a7a4"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4029965f-0824-4387-a345-24392054d662"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b0416f4-0728-455e-a187-90e9018cf0bb"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // VIVETracker
        m_VIVETracker = asset.FindActionMap("VIVETracker", throwIfNotFound: true);
        m_VIVETracker_Position = m_VIVETracker.FindAction("Position", throwIfNotFound: true);
        m_VIVETracker_Rotation = m_VIVETracker.FindAction("Rotation", throwIfNotFound: true);
        // VRController_left
        m_VRController_left = asset.FindActionMap("VRController_left", throwIfNotFound: true);
        m_VRController_left_Position = m_VRController_left.FindAction("Position", throwIfNotFound: true);
        m_VRController_left_Rotation = m_VRController_left.FindAction("Rotation", throwIfNotFound: true);
        m_VRController_left_TrackingState = m_VRController_left.FindAction("TrackingState", throwIfNotFound: true);
        m_VRController_left_HapticDevice = m_VRController_left.FindAction("HapticDevice", throwIfNotFound: true);
        m_VRController_left_Select = m_VRController_left.FindAction("Select", throwIfNotFound: true);
        m_VRController_left_SelectValue = m_VRController_left.FindAction("SelectValue", throwIfNotFound: true);
        m_VRController_left_Activate = m_VRController_left.FindAction("Activate", throwIfNotFound: true);
        m_VRController_left_ActivateValue = m_VRController_left.FindAction("ActivateValue", throwIfNotFound: true);
        m_VRController_left_UIPress = m_VRController_left.FindAction("UIPress", throwIfNotFound: true);
        m_VRController_left_UIPressValue = m_VRController_left.FindAction("UIPressValue", throwIfNotFound: true);
        m_VRController_left_RotateAnchor = m_VRController_left.FindAction("RotateAnchor", throwIfNotFound: true);
        m_VRController_left_TranslateAnchor = m_VRController_left.FindAction("TranslateAnchor", throwIfNotFound: true);
        m_VRController_left_TeleportSelect = m_VRController_left.FindAction("TeleportSelect", throwIfNotFound: true);
        m_VRController_left_TeleportModeActivate = m_VRController_left.FindAction("TeleportModeActivate", throwIfNotFound: true);
        m_VRController_left_TeleportModeCancel = m_VRController_left.FindAction("TeleportModeCancel", throwIfNotFound: true);
        m_VRController_left_Turn = m_VRController_left.FindAction("Turn", throwIfNotFound: true);
        m_VRController_left_Move = m_VRController_left.FindAction("Move", throwIfNotFound: true);
        // VRController_right
        m_VRController_right = asset.FindActionMap("VRController_right", throwIfNotFound: true);
        m_VRController_right_Position = m_VRController_right.FindAction("Position", throwIfNotFound: true);
        m_VRController_right_Rotation = m_VRController_right.FindAction("Rotation", throwIfNotFound: true);
        m_VRController_right_TrackingState = m_VRController_right.FindAction("TrackingState", throwIfNotFound: true);
        m_VRController_right_HapticDevice = m_VRController_right.FindAction("HapticDevice", throwIfNotFound: true);
        m_VRController_right_Select = m_VRController_right.FindAction("Select", throwIfNotFound: true);
        m_VRController_right_SelectValue = m_VRController_right.FindAction("SelectValue", throwIfNotFound: true);
        m_VRController_right_Activate = m_VRController_right.FindAction("Activate", throwIfNotFound: true);
        m_VRController_right_ActivateValue = m_VRController_right.FindAction("ActivateValue", throwIfNotFound: true);
        m_VRController_right_UIPress = m_VRController_right.FindAction("UIPress", throwIfNotFound: true);
        m_VRController_right_UIPressValue = m_VRController_right.FindAction("UIPressValue", throwIfNotFound: true);
        m_VRController_right_RotateAnchor = m_VRController_right.FindAction("RotateAnchor", throwIfNotFound: true);
        m_VRController_right_TranslateAnchor = m_VRController_right.FindAction("TranslateAnchor", throwIfNotFound: true);
        m_VRController_right_TeleportSelect = m_VRController_right.FindAction("TeleportSelect", throwIfNotFound: true);
        m_VRController_right_TeleportModeActivate = m_VRController_right.FindAction("TeleportModeActivate", throwIfNotFound: true);
        m_VRController_right_TeleportModeCancel = m_VRController_right.FindAction("TeleportModeCancel", throwIfNotFound: true);
        m_VRController_right_Turn = m_VRController_right.FindAction("Turn", throwIfNotFound: true);
        m_VRController_right_Move = m_VRController_right.FindAction("Move", throwIfNotFound: true);
        // Keyboard
        m_Keyboard = asset.FindActionMap("Keyboard", throwIfNotFound: true);
        m_Keyboard_BuildingWasPlacedTESTFUNKTION = m_Keyboard.FindAction("BuildingWasPlacedTESTFUNKTION", throwIfNotFound: true);
        m_Keyboard_EnterPressed = m_Keyboard.FindAction("EnterPressed", throwIfNotFound: true);
        m_Keyboard_CreateRoom = m_Keyboard.FindAction("CreateRoom", throwIfNotFound: true);
        m_Keyboard_ConnectToServer = m_Keyboard.FindAction("ConnectToServer", throwIfNotFound: true);
        m_Keyboard_ChangePlayerSetup_entrance = m_Keyboard.FindAction("ChangePlayerSetup_entrance", throwIfNotFound: true);
        m_Keyboard_JoinRoom = m_Keyboard.FindAction("JoinRoom", throwIfNotFound: true);
        m_Keyboard_rightRoom = m_Keyboard.FindAction("rightRoom", throwIfNotFound: true);
        m_Keyboard_leftRoom = m_Keyboard.FindAction("leftRoom", throwIfNotFound: true);
        m_Keyboard_LeaveRoom = m_Keyboard.FindAction("LeaveRoom", throwIfNotFound: true);
        m_Keyboard_ChangePlayerSetup_room = m_Keyboard.FindAction("ChangePlayerSetup_room", throwIfNotFound: true);
        m_Keyboard_SwitchModes = m_Keyboard.FindAction("SwitchModes", throwIfNotFound: true);
        // Mouse
        m_Mouse = asset.FindActionMap("Mouse", throwIfNotFound: true);
        m_Mouse_Navigate = m_Mouse.FindAction("Navigate", throwIfNotFound: true);
        m_Mouse_Submit = m_Mouse.FindAction("Submit", throwIfNotFound: true);
        m_Mouse_Cancel = m_Mouse.FindAction("Cancel", throwIfNotFound: true);
        m_Mouse_Point = m_Mouse.FindAction("Point", throwIfNotFound: true);
        m_Mouse_Click = m_Mouse.FindAction("Click", throwIfNotFound: true);
        m_Mouse_ScrollWheel = m_Mouse.FindAction("ScrollWheel", throwIfNotFound: true);
        m_Mouse_MiddleClick = m_Mouse.FindAction("MiddleClick", throwIfNotFound: true);
        m_Mouse_RightClick = m_Mouse.FindAction("RightClick", throwIfNotFound: true);
        m_Mouse_TrackedDevicePosition = m_Mouse.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_Mouse_TrackedDeviceOrientation = m_Mouse.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // VIVETracker
    private readonly InputActionMap m_VIVETracker;
    private IVIVETrackerActions m_VIVETrackerActionsCallbackInterface;
    private readonly InputAction m_VIVETracker_Position;
    private readonly InputAction m_VIVETracker_Rotation;
    public struct VIVETrackerActions
    {
        private @PlayerInputActions m_Wrapper;
        public VIVETrackerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_VIVETracker_Position;
        public InputAction @Rotation => m_Wrapper.m_VIVETracker_Rotation;
        public InputActionMap Get() { return m_Wrapper.m_VIVETracker; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VIVETrackerActions set) { return set.Get(); }
        public void SetCallbacks(IVIVETrackerActions instance)
        {
            if (m_Wrapper.m_VIVETrackerActionsCallbackInterface != null)
            {
                @Position.started -= m_Wrapper.m_VIVETrackerActionsCallbackInterface.OnPosition;
                @Position.performed -= m_Wrapper.m_VIVETrackerActionsCallbackInterface.OnPosition;
                @Position.canceled -= m_Wrapper.m_VIVETrackerActionsCallbackInterface.OnPosition;
                @Rotation.started -= m_Wrapper.m_VIVETrackerActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_VIVETrackerActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_VIVETrackerActionsCallbackInterface.OnRotation;
            }
            m_Wrapper.m_VIVETrackerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
            }
        }
    }
    public VIVETrackerActions @VIVETracker => new VIVETrackerActions(this);

    // VRController_left
    private readonly InputActionMap m_VRController_left;
    private IVRController_leftActions m_VRController_leftActionsCallbackInterface;
    private readonly InputAction m_VRController_left_Position;
    private readonly InputAction m_VRController_left_Rotation;
    private readonly InputAction m_VRController_left_TrackingState;
    private readonly InputAction m_VRController_left_HapticDevice;
    private readonly InputAction m_VRController_left_Select;
    private readonly InputAction m_VRController_left_SelectValue;
    private readonly InputAction m_VRController_left_Activate;
    private readonly InputAction m_VRController_left_ActivateValue;
    private readonly InputAction m_VRController_left_UIPress;
    private readonly InputAction m_VRController_left_UIPressValue;
    private readonly InputAction m_VRController_left_RotateAnchor;
    private readonly InputAction m_VRController_left_TranslateAnchor;
    private readonly InputAction m_VRController_left_TeleportSelect;
    private readonly InputAction m_VRController_left_TeleportModeActivate;
    private readonly InputAction m_VRController_left_TeleportModeCancel;
    private readonly InputAction m_VRController_left_Turn;
    private readonly InputAction m_VRController_left_Move;
    public struct VRController_leftActions
    {
        private @PlayerInputActions m_Wrapper;
        public VRController_leftActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_VRController_left_Position;
        public InputAction @Rotation => m_Wrapper.m_VRController_left_Rotation;
        public InputAction @TrackingState => m_Wrapper.m_VRController_left_TrackingState;
        public InputAction @HapticDevice => m_Wrapper.m_VRController_left_HapticDevice;
        public InputAction @Select => m_Wrapper.m_VRController_left_Select;
        public InputAction @SelectValue => m_Wrapper.m_VRController_left_SelectValue;
        public InputAction @Activate => m_Wrapper.m_VRController_left_Activate;
        public InputAction @ActivateValue => m_Wrapper.m_VRController_left_ActivateValue;
        public InputAction @UIPress => m_Wrapper.m_VRController_left_UIPress;
        public InputAction @UIPressValue => m_Wrapper.m_VRController_left_UIPressValue;
        public InputAction @RotateAnchor => m_Wrapper.m_VRController_left_RotateAnchor;
        public InputAction @TranslateAnchor => m_Wrapper.m_VRController_left_TranslateAnchor;
        public InputAction @TeleportSelect => m_Wrapper.m_VRController_left_TeleportSelect;
        public InputAction @TeleportModeActivate => m_Wrapper.m_VRController_left_TeleportModeActivate;
        public InputAction @TeleportModeCancel => m_Wrapper.m_VRController_left_TeleportModeCancel;
        public InputAction @Turn => m_Wrapper.m_VRController_left_Turn;
        public InputAction @Move => m_Wrapper.m_VRController_left_Move;
        public InputActionMap Get() { return m_Wrapper.m_VRController_left; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VRController_leftActions set) { return set.Get(); }
        public void SetCallbacks(IVRController_leftActions instance)
        {
            if (m_Wrapper.m_VRController_leftActionsCallbackInterface != null)
            {
                @Position.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnPosition;
                @Position.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnPosition;
                @Position.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnPosition;
                @Rotation.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnRotation;
                @TrackingState.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTrackingState;
                @TrackingState.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTrackingState;
                @TrackingState.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTrackingState;
                @HapticDevice.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnHapticDevice;
                @HapticDevice.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnHapticDevice;
                @HapticDevice.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnHapticDevice;
                @Select.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnSelect;
                @SelectValue.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnSelectValue;
                @SelectValue.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnSelectValue;
                @SelectValue.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnSelectValue;
                @Activate.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnActivate;
                @Activate.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnActivate;
                @Activate.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnActivate;
                @ActivateValue.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnActivateValue;
                @ActivateValue.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnActivateValue;
                @ActivateValue.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnActivateValue;
                @UIPress.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnUIPress;
                @UIPress.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnUIPress;
                @UIPress.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnUIPress;
                @UIPressValue.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnUIPressValue;
                @UIPressValue.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnUIPressValue;
                @UIPressValue.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnUIPressValue;
                @RotateAnchor.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnRotateAnchor;
                @RotateAnchor.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnRotateAnchor;
                @RotateAnchor.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnRotateAnchor;
                @TranslateAnchor.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTranslateAnchor;
                @TranslateAnchor.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTranslateAnchor;
                @TranslateAnchor.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTranslateAnchor;
                @TeleportSelect.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTeleportSelect;
                @TeleportSelect.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTeleportSelect;
                @TeleportSelect.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTeleportSelect;
                @TeleportModeActivate.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTeleportModeActivate;
                @TeleportModeActivate.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTeleportModeActivate;
                @TeleportModeActivate.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTeleportModeActivate;
                @TeleportModeCancel.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTeleportModeCancel;
                @TeleportModeCancel.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTeleportModeCancel;
                @TeleportModeCancel.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTeleportModeCancel;
                @Turn.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTurn;
                @Turn.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTurn;
                @Turn.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnTurn;
                @Move.started -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_VRController_leftActionsCallbackInterface.OnMove;
            }
            m_Wrapper.m_VRController_leftActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @TrackingState.started += instance.OnTrackingState;
                @TrackingState.performed += instance.OnTrackingState;
                @TrackingState.canceled += instance.OnTrackingState;
                @HapticDevice.started += instance.OnHapticDevice;
                @HapticDevice.performed += instance.OnHapticDevice;
                @HapticDevice.canceled += instance.OnHapticDevice;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @SelectValue.started += instance.OnSelectValue;
                @SelectValue.performed += instance.OnSelectValue;
                @SelectValue.canceled += instance.OnSelectValue;
                @Activate.started += instance.OnActivate;
                @Activate.performed += instance.OnActivate;
                @Activate.canceled += instance.OnActivate;
                @ActivateValue.started += instance.OnActivateValue;
                @ActivateValue.performed += instance.OnActivateValue;
                @ActivateValue.canceled += instance.OnActivateValue;
                @UIPress.started += instance.OnUIPress;
                @UIPress.performed += instance.OnUIPress;
                @UIPress.canceled += instance.OnUIPress;
                @UIPressValue.started += instance.OnUIPressValue;
                @UIPressValue.performed += instance.OnUIPressValue;
                @UIPressValue.canceled += instance.OnUIPressValue;
                @RotateAnchor.started += instance.OnRotateAnchor;
                @RotateAnchor.performed += instance.OnRotateAnchor;
                @RotateAnchor.canceled += instance.OnRotateAnchor;
                @TranslateAnchor.started += instance.OnTranslateAnchor;
                @TranslateAnchor.performed += instance.OnTranslateAnchor;
                @TranslateAnchor.canceled += instance.OnTranslateAnchor;
                @TeleportSelect.started += instance.OnTeleportSelect;
                @TeleportSelect.performed += instance.OnTeleportSelect;
                @TeleportSelect.canceled += instance.OnTeleportSelect;
                @TeleportModeActivate.started += instance.OnTeleportModeActivate;
                @TeleportModeActivate.performed += instance.OnTeleportModeActivate;
                @TeleportModeActivate.canceled += instance.OnTeleportModeActivate;
                @TeleportModeCancel.started += instance.OnTeleportModeCancel;
                @TeleportModeCancel.performed += instance.OnTeleportModeCancel;
                @TeleportModeCancel.canceled += instance.OnTeleportModeCancel;
                @Turn.started += instance.OnTurn;
                @Turn.performed += instance.OnTurn;
                @Turn.canceled += instance.OnTurn;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
            }
        }
    }
    public VRController_leftActions @VRController_left => new VRController_leftActions(this);

    // VRController_right
    private readonly InputActionMap m_VRController_right;
    private IVRController_rightActions m_VRController_rightActionsCallbackInterface;
    private readonly InputAction m_VRController_right_Position;
    private readonly InputAction m_VRController_right_Rotation;
    private readonly InputAction m_VRController_right_TrackingState;
    private readonly InputAction m_VRController_right_HapticDevice;
    private readonly InputAction m_VRController_right_Select;
    private readonly InputAction m_VRController_right_SelectValue;
    private readonly InputAction m_VRController_right_Activate;
    private readonly InputAction m_VRController_right_ActivateValue;
    private readonly InputAction m_VRController_right_UIPress;
    private readonly InputAction m_VRController_right_UIPressValue;
    private readonly InputAction m_VRController_right_RotateAnchor;
    private readonly InputAction m_VRController_right_TranslateAnchor;
    private readonly InputAction m_VRController_right_TeleportSelect;
    private readonly InputAction m_VRController_right_TeleportModeActivate;
    private readonly InputAction m_VRController_right_TeleportModeCancel;
    private readonly InputAction m_VRController_right_Turn;
    private readonly InputAction m_VRController_right_Move;
    public struct VRController_rightActions
    {
        private @PlayerInputActions m_Wrapper;
        public VRController_rightActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_VRController_right_Position;
        public InputAction @Rotation => m_Wrapper.m_VRController_right_Rotation;
        public InputAction @TrackingState => m_Wrapper.m_VRController_right_TrackingState;
        public InputAction @HapticDevice => m_Wrapper.m_VRController_right_HapticDevice;
        public InputAction @Select => m_Wrapper.m_VRController_right_Select;
        public InputAction @SelectValue => m_Wrapper.m_VRController_right_SelectValue;
        public InputAction @Activate => m_Wrapper.m_VRController_right_Activate;
        public InputAction @ActivateValue => m_Wrapper.m_VRController_right_ActivateValue;
        public InputAction @UIPress => m_Wrapper.m_VRController_right_UIPress;
        public InputAction @UIPressValue => m_Wrapper.m_VRController_right_UIPressValue;
        public InputAction @RotateAnchor => m_Wrapper.m_VRController_right_RotateAnchor;
        public InputAction @TranslateAnchor => m_Wrapper.m_VRController_right_TranslateAnchor;
        public InputAction @TeleportSelect => m_Wrapper.m_VRController_right_TeleportSelect;
        public InputAction @TeleportModeActivate => m_Wrapper.m_VRController_right_TeleportModeActivate;
        public InputAction @TeleportModeCancel => m_Wrapper.m_VRController_right_TeleportModeCancel;
        public InputAction @Turn => m_Wrapper.m_VRController_right_Turn;
        public InputAction @Move => m_Wrapper.m_VRController_right_Move;
        public InputActionMap Get() { return m_Wrapper.m_VRController_right; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VRController_rightActions set) { return set.Get(); }
        public void SetCallbacks(IVRController_rightActions instance)
        {
            if (m_Wrapper.m_VRController_rightActionsCallbackInterface != null)
            {
                @Position.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnPosition;
                @Position.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnPosition;
                @Position.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnPosition;
                @Rotation.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnRotation;
                @TrackingState.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTrackingState;
                @TrackingState.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTrackingState;
                @TrackingState.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTrackingState;
                @HapticDevice.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnHapticDevice;
                @HapticDevice.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnHapticDevice;
                @HapticDevice.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnHapticDevice;
                @Select.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnSelect;
                @SelectValue.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnSelectValue;
                @SelectValue.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnSelectValue;
                @SelectValue.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnSelectValue;
                @Activate.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnActivate;
                @Activate.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnActivate;
                @Activate.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnActivate;
                @ActivateValue.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnActivateValue;
                @ActivateValue.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnActivateValue;
                @ActivateValue.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnActivateValue;
                @UIPress.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnUIPress;
                @UIPress.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnUIPress;
                @UIPress.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnUIPress;
                @UIPressValue.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnUIPressValue;
                @UIPressValue.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnUIPressValue;
                @UIPressValue.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnUIPressValue;
                @RotateAnchor.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnRotateAnchor;
                @RotateAnchor.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnRotateAnchor;
                @RotateAnchor.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnRotateAnchor;
                @TranslateAnchor.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTranslateAnchor;
                @TranslateAnchor.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTranslateAnchor;
                @TranslateAnchor.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTranslateAnchor;
                @TeleportSelect.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTeleportSelect;
                @TeleportSelect.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTeleportSelect;
                @TeleportSelect.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTeleportSelect;
                @TeleportModeActivate.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTeleportModeActivate;
                @TeleportModeActivate.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTeleportModeActivate;
                @TeleportModeActivate.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTeleportModeActivate;
                @TeleportModeCancel.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTeleportModeCancel;
                @TeleportModeCancel.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTeleportModeCancel;
                @TeleportModeCancel.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTeleportModeCancel;
                @Turn.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTurn;
                @Turn.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTurn;
                @Turn.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnTurn;
                @Move.started -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_VRController_rightActionsCallbackInterface.OnMove;
            }
            m_Wrapper.m_VRController_rightActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @TrackingState.started += instance.OnTrackingState;
                @TrackingState.performed += instance.OnTrackingState;
                @TrackingState.canceled += instance.OnTrackingState;
                @HapticDevice.started += instance.OnHapticDevice;
                @HapticDevice.performed += instance.OnHapticDevice;
                @HapticDevice.canceled += instance.OnHapticDevice;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @SelectValue.started += instance.OnSelectValue;
                @SelectValue.performed += instance.OnSelectValue;
                @SelectValue.canceled += instance.OnSelectValue;
                @Activate.started += instance.OnActivate;
                @Activate.performed += instance.OnActivate;
                @Activate.canceled += instance.OnActivate;
                @ActivateValue.started += instance.OnActivateValue;
                @ActivateValue.performed += instance.OnActivateValue;
                @ActivateValue.canceled += instance.OnActivateValue;
                @UIPress.started += instance.OnUIPress;
                @UIPress.performed += instance.OnUIPress;
                @UIPress.canceled += instance.OnUIPress;
                @UIPressValue.started += instance.OnUIPressValue;
                @UIPressValue.performed += instance.OnUIPressValue;
                @UIPressValue.canceled += instance.OnUIPressValue;
                @RotateAnchor.started += instance.OnRotateAnchor;
                @RotateAnchor.performed += instance.OnRotateAnchor;
                @RotateAnchor.canceled += instance.OnRotateAnchor;
                @TranslateAnchor.started += instance.OnTranslateAnchor;
                @TranslateAnchor.performed += instance.OnTranslateAnchor;
                @TranslateAnchor.canceled += instance.OnTranslateAnchor;
                @TeleportSelect.started += instance.OnTeleportSelect;
                @TeleportSelect.performed += instance.OnTeleportSelect;
                @TeleportSelect.canceled += instance.OnTeleportSelect;
                @TeleportModeActivate.started += instance.OnTeleportModeActivate;
                @TeleportModeActivate.performed += instance.OnTeleportModeActivate;
                @TeleportModeActivate.canceled += instance.OnTeleportModeActivate;
                @TeleportModeCancel.started += instance.OnTeleportModeCancel;
                @TeleportModeCancel.performed += instance.OnTeleportModeCancel;
                @TeleportModeCancel.canceled += instance.OnTeleportModeCancel;
                @Turn.started += instance.OnTurn;
                @Turn.performed += instance.OnTurn;
                @Turn.canceled += instance.OnTurn;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
            }
        }
    }
    public VRController_rightActions @VRController_right => new VRController_rightActions(this);

    // Keyboard
    private readonly InputActionMap m_Keyboard;
    private IKeyboardActions m_KeyboardActionsCallbackInterface;
    private readonly InputAction m_Keyboard_BuildingWasPlacedTESTFUNKTION;
    private readonly InputAction m_Keyboard_EnterPressed;
    private readonly InputAction m_Keyboard_CreateRoom;
    private readonly InputAction m_Keyboard_ConnectToServer;
    private readonly InputAction m_Keyboard_ChangePlayerSetup_entrance;
    private readonly InputAction m_Keyboard_JoinRoom;
    private readonly InputAction m_Keyboard_rightRoom;
    private readonly InputAction m_Keyboard_leftRoom;
    private readonly InputAction m_Keyboard_LeaveRoom;
    private readonly InputAction m_Keyboard_ChangePlayerSetup_room;
    private readonly InputAction m_Keyboard_SwitchModes;
    public struct KeyboardActions
    {
        private @PlayerInputActions m_Wrapper;
        public KeyboardActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @BuildingWasPlacedTESTFUNKTION => m_Wrapper.m_Keyboard_BuildingWasPlacedTESTFUNKTION;
        public InputAction @EnterPressed => m_Wrapper.m_Keyboard_EnterPressed;
        public InputAction @CreateRoom => m_Wrapper.m_Keyboard_CreateRoom;
        public InputAction @ConnectToServer => m_Wrapper.m_Keyboard_ConnectToServer;
        public InputAction @ChangePlayerSetup_entrance => m_Wrapper.m_Keyboard_ChangePlayerSetup_entrance;
        public InputAction @JoinRoom => m_Wrapper.m_Keyboard_JoinRoom;
        public InputAction @rightRoom => m_Wrapper.m_Keyboard_rightRoom;
        public InputAction @leftRoom => m_Wrapper.m_Keyboard_leftRoom;
        public InputAction @LeaveRoom => m_Wrapper.m_Keyboard_LeaveRoom;
        public InputAction @ChangePlayerSetup_room => m_Wrapper.m_Keyboard_ChangePlayerSetup_room;
        public InputAction @SwitchModes => m_Wrapper.m_Keyboard_SwitchModes;
        public InputActionMap Get() { return m_Wrapper.m_Keyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardActions set) { return set.Get(); }
        public void SetCallbacks(IKeyboardActions instance)
        {
            if (m_Wrapper.m_KeyboardActionsCallbackInterface != null)
            {
                @BuildingWasPlacedTESTFUNKTION.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnBuildingWasPlacedTESTFUNKTION;
                @BuildingWasPlacedTESTFUNKTION.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnBuildingWasPlacedTESTFUNKTION;
                @BuildingWasPlacedTESTFUNKTION.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnBuildingWasPlacedTESTFUNKTION;
                @EnterPressed.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnEnterPressed;
                @EnterPressed.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnEnterPressed;
                @EnterPressed.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnEnterPressed;
                @CreateRoom.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnCreateRoom;
                @CreateRoom.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnCreateRoom;
                @CreateRoom.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnCreateRoom;
                @ConnectToServer.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnConnectToServer;
                @ConnectToServer.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnConnectToServer;
                @ConnectToServer.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnConnectToServer;
                @ChangePlayerSetup_entrance.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnChangePlayerSetup_entrance;
                @ChangePlayerSetup_entrance.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnChangePlayerSetup_entrance;
                @ChangePlayerSetup_entrance.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnChangePlayerSetup_entrance;
                @JoinRoom.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnJoinRoom;
                @JoinRoom.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnJoinRoom;
                @JoinRoom.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnJoinRoom;
                @rightRoom.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnRightRoom;
                @rightRoom.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnRightRoom;
                @rightRoom.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnRightRoom;
                @leftRoom.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnLeftRoom;
                @leftRoom.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnLeftRoom;
                @leftRoom.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnLeftRoom;
                @LeaveRoom.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnLeaveRoom;
                @LeaveRoom.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnLeaveRoom;
                @LeaveRoom.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnLeaveRoom;
                @ChangePlayerSetup_room.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnChangePlayerSetup_room;
                @ChangePlayerSetup_room.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnChangePlayerSetup_room;
                @ChangePlayerSetup_room.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnChangePlayerSetup_room;
                @SwitchModes.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnSwitchModes;
                @SwitchModes.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnSwitchModes;
                @SwitchModes.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnSwitchModes;
            }
            m_Wrapper.m_KeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @BuildingWasPlacedTESTFUNKTION.started += instance.OnBuildingWasPlacedTESTFUNKTION;
                @BuildingWasPlacedTESTFUNKTION.performed += instance.OnBuildingWasPlacedTESTFUNKTION;
                @BuildingWasPlacedTESTFUNKTION.canceled += instance.OnBuildingWasPlacedTESTFUNKTION;
                @EnterPressed.started += instance.OnEnterPressed;
                @EnterPressed.performed += instance.OnEnterPressed;
                @EnterPressed.canceled += instance.OnEnterPressed;
                @CreateRoom.started += instance.OnCreateRoom;
                @CreateRoom.performed += instance.OnCreateRoom;
                @CreateRoom.canceled += instance.OnCreateRoom;
                @ConnectToServer.started += instance.OnConnectToServer;
                @ConnectToServer.performed += instance.OnConnectToServer;
                @ConnectToServer.canceled += instance.OnConnectToServer;
                @ChangePlayerSetup_entrance.started += instance.OnChangePlayerSetup_entrance;
                @ChangePlayerSetup_entrance.performed += instance.OnChangePlayerSetup_entrance;
                @ChangePlayerSetup_entrance.canceled += instance.OnChangePlayerSetup_entrance;
                @JoinRoom.started += instance.OnJoinRoom;
                @JoinRoom.performed += instance.OnJoinRoom;
                @JoinRoom.canceled += instance.OnJoinRoom;
                @rightRoom.started += instance.OnRightRoom;
                @rightRoom.performed += instance.OnRightRoom;
                @rightRoom.canceled += instance.OnRightRoom;
                @leftRoom.started += instance.OnLeftRoom;
                @leftRoom.performed += instance.OnLeftRoom;
                @leftRoom.canceled += instance.OnLeftRoom;
                @LeaveRoom.started += instance.OnLeaveRoom;
                @LeaveRoom.performed += instance.OnLeaveRoom;
                @LeaveRoom.canceled += instance.OnLeaveRoom;
                @ChangePlayerSetup_room.started += instance.OnChangePlayerSetup_room;
                @ChangePlayerSetup_room.performed += instance.OnChangePlayerSetup_room;
                @ChangePlayerSetup_room.canceled += instance.OnChangePlayerSetup_room;
                @SwitchModes.started += instance.OnSwitchModes;
                @SwitchModes.performed += instance.OnSwitchModes;
                @SwitchModes.canceled += instance.OnSwitchModes;
            }
        }
    }
    public KeyboardActions @Keyboard => new KeyboardActions(this);

    // Mouse
    private readonly InputActionMap m_Mouse;
    private IMouseActions m_MouseActionsCallbackInterface;
    private readonly InputAction m_Mouse_Navigate;
    private readonly InputAction m_Mouse_Submit;
    private readonly InputAction m_Mouse_Cancel;
    private readonly InputAction m_Mouse_Point;
    private readonly InputAction m_Mouse_Click;
    private readonly InputAction m_Mouse_ScrollWheel;
    private readonly InputAction m_Mouse_MiddleClick;
    private readonly InputAction m_Mouse_RightClick;
    private readonly InputAction m_Mouse_TrackedDevicePosition;
    private readonly InputAction m_Mouse_TrackedDeviceOrientation;
    public struct MouseActions
    {
        private @PlayerInputActions m_Wrapper;
        public MouseActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_Mouse_Navigate;
        public InputAction @Submit => m_Wrapper.m_Mouse_Submit;
        public InputAction @Cancel => m_Wrapper.m_Mouse_Cancel;
        public InputAction @Point => m_Wrapper.m_Mouse_Point;
        public InputAction @Click => m_Wrapper.m_Mouse_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_Mouse_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_Mouse_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_Mouse_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_Mouse_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_Mouse_TrackedDeviceOrientation;
        public InputActionMap Get() { return m_Wrapper.m_Mouse; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MouseActions set) { return set.Get(); }
        public void SetCallbacks(IMouseActions instance)
        {
            if (m_Wrapper.m_MouseActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClick;
                @TrackedDevicePosition.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnTrackedDeviceOrientation;
            }
            m_Wrapper.m_MouseActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
            }
        }
    }
    public MouseActions @Mouse => new MouseActions(this);
    public interface IVIVETrackerActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
    }
    public interface IVRController_leftActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
        void OnHapticDevice(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnSelectValue(InputAction.CallbackContext context);
        void OnActivate(InputAction.CallbackContext context);
        void OnActivateValue(InputAction.CallbackContext context);
        void OnUIPress(InputAction.CallbackContext context);
        void OnUIPressValue(InputAction.CallbackContext context);
        void OnRotateAnchor(InputAction.CallbackContext context);
        void OnTranslateAnchor(InputAction.CallbackContext context);
        void OnTeleportSelect(InputAction.CallbackContext context);
        void OnTeleportModeActivate(InputAction.CallbackContext context);
        void OnTeleportModeCancel(InputAction.CallbackContext context);
        void OnTurn(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
    }
    public interface IVRController_rightActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
        void OnHapticDevice(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnSelectValue(InputAction.CallbackContext context);
        void OnActivate(InputAction.CallbackContext context);
        void OnActivateValue(InputAction.CallbackContext context);
        void OnUIPress(InputAction.CallbackContext context);
        void OnUIPressValue(InputAction.CallbackContext context);
        void OnRotateAnchor(InputAction.CallbackContext context);
        void OnTranslateAnchor(InputAction.CallbackContext context);
        void OnTeleportSelect(InputAction.CallbackContext context);
        void OnTeleportModeActivate(InputAction.CallbackContext context);
        void OnTeleportModeCancel(InputAction.CallbackContext context);
        void OnTurn(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
    }
    public interface IKeyboardActions
    {
        void OnBuildingWasPlacedTESTFUNKTION(InputAction.CallbackContext context);
        void OnEnterPressed(InputAction.CallbackContext context);
        void OnCreateRoom(InputAction.CallbackContext context);
        void OnConnectToServer(InputAction.CallbackContext context);
        void OnChangePlayerSetup_entrance(InputAction.CallbackContext context);
        void OnJoinRoom(InputAction.CallbackContext context);
        void OnRightRoom(InputAction.CallbackContext context);
        void OnLeftRoom(InputAction.CallbackContext context);
        void OnLeaveRoom(InputAction.CallbackContext context);
        void OnChangePlayerSetup_room(InputAction.CallbackContext context);
        void OnSwitchModes(InputAction.CallbackContext context);
    }
    public interface IMouseActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
    }
}
